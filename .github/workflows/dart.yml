name: iOS-ipa-build

on:
  workflow_dispatch:

jobs:
  build-ios:
    name: ðŸŽ‰ iOS Build
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64

      # Get dependencies for Flutter project
      - run: flutter pub get
        working-directory: "${{ github.workspace }}/untitled folder"

      # List contents of the root directory to confirm folder structure
      - name: List files in the root directory
        run: ls -la
        working-directory: ${{ github.workspace }}

      # List files in 'untitled folder' to check path correctness
      - name: List files in untitled folder
        run: ls -la "${{ github.workspace }}/untitled folder"
        working-directory: ${{ github.workspace }}

      # Check if 'lib/main.dart' exists in the correct directory
      - name: Check if lib/main.dart exists
        run: |
          echo "Checking if untitled folder/lib/main.dart exists"
          if [ ! -f "${{ github.workspace }}/untitled folder/lib/main.dart" ]; then
            echo "lib/main.dart not found!"
            exit 1
          else
            echo "lib/main.dart exists."
          fi
        working-directory: ${{ github.workspace }}

      # Make sure the iOS directory exists
      - name: Ensure iOS directory exists
        run: mkdir -p "${{ github.workspace }}/untitled folder/ios"

      # Run pod repo update for iOS dependencies
      - name: Run pod repo update
        run: pod repo update
        working-directory: "${{ github.workspace }}/untitled folder/ios"

      # Build the iOS app
      - run: flutter build ios --release --no-codesign
        working-directory: "${{ github.workspace }}/untitled folder"

      # Create Payload directory for the app bundle
      - run: mkdir Payload
        working-directory: "${{ github.workspace }}/untitled folder/build/ios/iphoneos"

      # Move the app into Payload
      - run: mv Runner.app/ Payload
        working-directory: "${{ github.workspace }}/untitled folder/build/ios/iphoneos"

      # Zip the app into an IPA
      - name: Zip output
        run: zip -qq -r -9 FlutterIpaExport.ipa Payload
        working-directory: "${{ github.workspace }}/untitled folder/build/ios/iphoneos"

      # Upload the IPA to GitHub release
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: "${{ github.workspace }}/untitled folder/build/ios/iphoneos/FlutterIpaExport.ipa"
          tag: v1.0
          overwrite: true
          body: "This is the first release"
